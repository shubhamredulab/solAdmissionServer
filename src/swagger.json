{
    "swagger": "2.0",
    "info": {
        "title": "solAdmissionBE API's.",
        "description": "All api's of erpAdmissionBE."
    },
    "schemes": [
        "http",
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "in": "header",
            "name": "Authorization",
            "description": "Bearer <my own JWT token>"
        }
    },
    "security": [
        {
            "Bearer": []
        }
    ],
    "tags": [
        {
            "name": "Testing route"
        },
        {
            "name": "Keycloak"
        },
        {
            "name": "Auth"
        },
        {
            "name": "User"
        },
        {
            "name": "Role Base Access"
        },
        {
            "name": "change profile"
        },
        {
            "name": "Users"
        },
        {
            "name": "Activity"
        },
        {
            "name": "Merit list"
        },
        {
            "name": "University"
        },
        {
            "name": "College"
        },
        {
            "name": "Faculty"
        },
        {
            "name": "Department"
        },
        {
            "name": "Subject"
        },
        {
            "name": "Course"
        },
        {
            "name": "SubjectGroup"
        },
        {
            "name": "CollegeCourse"
        },
        {
            "name": "Ticket"
        },
        {
            "name": "User Course Details"
        },
        {
            "name": "Documents"
        },
        {
            "name": "Preferences"
        },
        {
            "name": "Payment"
        },
        {
            "name":"Student Feedback"
        }
    ],
    "paths": {
        "/": {
            "get": {
                "tags": [
                    "Testing route"
                ],
                "responses": {
                    "200": {
                        "description": "ok"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/api/keycloak/getToken": {
            "post": {
                "tags": [
                    "Keycloak"
                ],
                "summary": "To get token",
                "responses": {
                    "200": {
                        "description": "Okay"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/keycloak/role": {
            "post": {
                "tags": [
                    "Keycloak"
                ],
                "summary": "Token required",
                "description": "Create role",
                "parameters": [
                    {
                        "name": "name",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "example": "ADMIN"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "409": {
                        "description": "Duplicate Entry Found"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/keycloak/register": {
            "post": {
                "tags": [
                    "Keycloak"
                ],
                "description": "Register user and assign default role student",
                "parameters": [
                    {
                        "name": "userData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "nameAsOnMarksheet": {
                                    "type": "string",
                                    "example": ""
                                },
                                "email": {
                                    "type": "string",
                                    "example": ""
                                },
                                "mobileno": {
                                    "type": "string",
                                    "example": ""
                                },
                                "role": {
                                    "type": "string",
                                    "example": "STUDENT"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "You are registered successfully"
                    },
                    "400": {
                        "description": "Unable to register."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "409": {
                        "description": "Already registered with this email."
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/keycloak/login-admin": {
            "post": {
                "tags": [
                    "Keycloak"
                ],
                "description": "Logged in",
                "parameters": [
                    {
                        "name": "loginData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "username": {
                                    "type": "string",
                                    "description": "write email as username",
                                    "example": ""
                                },
                                "password": {
                                    "type": "string",
                                    "example": ""
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Logged in successfully!!!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/keycloak/login-user": {
            "post": {
                "tags": [
                    "Keycloak"
                ],
                "parameters": [
                    {
                        "name": "loginData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "username": {
                                    "type": "string",
                                    "description": "write email as username",
                                    "example": ""
                                },
                                "password": {
                                    "type": "string",
                                    "example": ""
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Logged in successfully!!!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/auth/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "This route send payment redirect url in response.",
                "description": "Register user and assign default role student",
                "parameters": [
                    {
                        "name": "userData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "nameAsOnMarksheet": {
                                    "type": "string",
                                    "example": ""
                                },
                                "email": {
                                    "type": "string",
                                    "example": ""
                                },
                                "mobileno": {
                                    "type": "string",
                                    "example": ""
                                },
                                "admissionType": {
                                    "type": "string",
                                    "example": ""
                                },
                                "agree": {
                                    "type": "boolean",
                                    "example": "true"
                                },
                                "academicYear": {
                                    "type": "number"
                                },
                                "role": {
                                    "type": "string",
                                    "example": "STUDENT"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "You are registered successfully"
                    },
                    "400": {
                        "description": "Unable to register."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "409": {
                        "description": "Already registered with this email."
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/user/getuserData": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get All pin-purchased Users",
                "description": "Retrieve a list of all pin-purchased users",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Users retrieved successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "example": 200
                                },
                                "message": {
                                    "type": "string",
                                    "example": "All users"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {}
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Something went wrong"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user/getPersonalData": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Get a student by ID",
                "description": "Retrieve a student's information by their ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "example": ""
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Student information retrieved successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Student information retrieved successfully"
                                },
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "student": {
                                            "type": "object"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Error retrieving student information"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user/updateStudentDetails": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Update Student Details",
                "description": "Update the details of a student user",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "type": "object",
                                        "description": "Updated user data"
                                    },
                                    "id": {
                                        "type": "string",
                                        "description": "User ID"
                                    }
                                },
                                "required": [
                                    "data",
                                    "id"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User details updated successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "example": 200
                                },
                                "message": {
                                    "type": "string",
                                    "example": "User Details updated"
                                },
                                "data": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Something went wrong"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user/updateStudentStatus": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Update student status",
                "description": "Update a student's status and synchronize with Keycloak",
                "parameters": [
                    {
                        "name": "studentId",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "studentId": {
                                    "type": "string",
                                    "example": ""
                                },
                                "status": {
                                    "type": "string",
                                    "example": "active"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Student status updated successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "example": 200
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Student status updated successfully"
                                },
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "student": {
                                            "type": "object",
                                            "properties": {}
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Error updating student status"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/education/getEduData": {
            "get": {
                "tags": [
                    "Educational"
                ],
                "summary": "Get Educational Data by User ID and Degree Type",
                "description": "Retrieve educational data for a user based on their ID and degree type",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "query",
                        "required": true,
                        "type": "string",
                        "description": "User ID",
                        "example": 123
                    },
                    {
                        "name": "degreeType",
                        "in": "query",
                        "required": true,
                        "type": "string",
                        "description": "Degree Type",
                        "example": "Bachelor's"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Educational data retrieved successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "example": 200
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Educational data retrieved successfully"
                                },
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "educationalData": {
                                            "type": "object"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Something went wrong"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/education/updateEducationalDetails": {
            "put": {
                "tags": [
                    "Educational"
                ],
                "summary": "Update Educational Details",
                "description": "Update the educational details for a user",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "data": {
                                        "type": "object",
                                        "description": "Updated educational data"
                                    },
                                    "userId": {
                                        "type": "string",
                                        "description": "User ID"
                                    }
                                },
                                "required": [
                                    "data",
                                    "userId"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Educational details updated successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "example": 200
                                },
                                "message": {
                                    "type": "string",
                                    "example": "Educational Details updated"
                                },
                                "data": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Something went wrong"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/documents/getDocuments/{userId}": {
            "get": {
                "tags": [
                    "Documents"
                ],
                "summary": "Get Documents for a User",
                "description": "Retrieve documents for a specific user by their ID",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "User ID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File data retrieved successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "example": 200
                                },
                                "message": {
                                    "type": "string",
                                    "example": "File Data Get Successfully"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "documentType": {
                                                "type": "string",
                                                "example": "Type"
                                            },
                                            "filePath": {
                                                "type": "string",
                                                "example": "https://example.com/documents/user123/file.pdf"
                                            },
                                            "extension": {
                                                "type": "string",
                                                "example": "pdf"
                                            },
                                            "fileName": {
                                                "type": "string",
                                                "example": "file.pdf"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Something went wrong"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/access/allowMenuAccessToAdmin": {
            "post": {
                "tags": [
                    "Role Base Access"
                ],
                "summary": "Token required",
                "description": "allow Access Menu To user role wise",
                "parameters": [
                    {
                        "name": "Alloow Access",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "number",
                                    "example": 1
                                },
                                "role": {
                                    "type": "string",
                                    "example": "ADMIN"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "example": "dashboard"
                                    }
                                },
                                "email": {
                                    "type": "string",
                                    "example": "test@email.com"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "access added successfully"
                    },
                    "400": {
                        "description": "user not created "
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/access/getAccessData": {
            "get": {
                "tags": [
                    "Role Base Access"
                ],
                "summary": "Token required",
                "description": "get Access Menu To user role wise",
                "parameters": [
                    {
                        "name": "role",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "userId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "access added successfully"
                    }
                }
            }
        },
        "/api/upload/images": {
            "put": {
                "tags": [
                    "change profile"
                ],
                "summary": "Token required",
                "description": "This route is used to change the profile picture",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "formData",
                        "required": true,
                        "type": "number",
                        "example": 1
                    },
                    {
                        "name": "file",
                        "in": "formData",
                        "required": true,
                        "type": "file"
                    }
                ],
                "responses": {
                    "200": {}
                }
            }
        },
        "/api/upload/getUploadedImage": {
            "get": {
                "tags": [
                    "change profile"
                ],
                "summary": "Token required",
                "description": "get Uploaded Image",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "access added successfully"
                    }
                }
            }
        },
        "/api/upload/deleteProfilePic": {
            "delete": {
                "tags": [
                    "change profile"
                ],
                "summary": "Token required",
                "description": "this route use delete the profile pic",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "example": ""
                        }
                    },
                    {
                        "name": "fileName",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {}
                }
            }
        },
        "/api/user/UserRoles": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Token required",
                "description": "get User Roles for dropdown",
                "responses": {
                    "200": {
                        "description": "User Roles"
                    }
                }
            }
        },
        "/api/user/getRoleWiseData": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Token required",
                "description": "get User data all admin datas",
                "parameters": [
                    {
                        "name": "pages",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "'All users"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/user/subAdminRegister": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Token required",
                "description": "this is use to create Admins in the database and keyclock also",
                "parameters": [
                    {
                        "name": "Admin Register",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "firstName": {
                                    "type": "string",
                                    "example": ""
                                },
                                "lastName": {
                                    "type": "string",
                                    "example": ""
                                },
                                "email": {
                                    "type": "string",
                                    "example": ""
                                },
                                "role": {
                                    "type": "string",
                                    "example": ""
                                },
                                "mobileno": {
                                    "type": "string",
                                    "example": ""
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "You are registered successfully"
                    },
                    "400": {
                        "description": "Unable to register. "
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/user/ChangeAdminStatus": {
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Token required",
                "description": "This route is used to change the profile picture",
                "parameters": [
                    {
                        "name": "Change Admin Status",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "number"
                                },
                                "changeStatus": {
                                    "type": "string",
                                    "example": ""
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status Updated successfuly"
                    },
                    "400": {
                        "description": "Status Not Update"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/user/searchData": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Token required",
                "description": "get Uploaded Image",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "example": ""
                        }
                    },
                    {
                        "name": "value",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All users"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/user/getSingleUserPersonalEduDocData": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Token required",
                "description": "Get the user Personal, Educational and Documents",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User Personal, Educational and Documents"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/user/saveData": {
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Token required",
                "description": "This route is used to save user details",
                "parameters": [
                    {
                        "name": "update user details",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "firstName": {
                                                "type": "string",
                                                "example": "John"
                                            },
                                            "lastName": {
                                                "type": "string",
                                                "example": "Doe"
                                            },
                                            "mobileno": {
                                                "type": "string",
                                                "example": "1234567890"
                                            }
                                        },
                                        "required": [
                                            "firstName",
                                            "lastName",
                                            "mobileno"
                                        ]
                                    }
                                },
                                "id": {
                                    "type": "number"
                                }
                            },
                            "required": [
                                "data",
                                "id"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User Datails updated"
                    },
                    "400": {
                        "description": " Not Updated"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/user/userData": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Token required",
                "description": "get profileuser Details",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": " geted Details successfully"
                    }
                }
            }
        },
        "/api/activity/getAllActivity": {
            "get": {
                "tags": [
                    "Activity"
                ],
                "summary": "Token required",
                "description": "get Activity  of all user",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All users"
                    }
                }
            }
        },
        "/api/activity/searchData": {
            "get": {
                "tags": [
                    "Activity"
                ],
                "summary": "Token required",
                "description": "search the  Activity  of user",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "value",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All users"
                    }
                }
            }
        },
        "/api/meritList/getMeritList": {
            "post": {
                "tags": [
                    "Merit list"
                ],
                "summary": "Token required",
                "description": "this is use to get merit list of selected data",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "CollegeCtrl": {
                                            "type": "string",
                                            "example": "2"
                                        },
                                        "CourseCtrl": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "PercentageCtrl": {
                                            "type": "string",
                                            "example": "22.55"
                                        },
                                        "categoryCtr": {
                                            "type": "string",
                                            "example": "General"
                                        },
                                        "subjectGroupCtrl": {
                                            "type": "array",
                                            "items": {}
                                        },
                                        "meritListNo": {
                                            "type": "string",
                                            "example": "first merit list"
                                        }
                                    }
                                },
                                "page": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "groupId": {
                                    "type": "array",
                                    "items": {}
                                },
                                "courseName": {
                                    "type": "string",
                                    "example": "1"
                                },
                                "collegeName": {
                                    "type": "string",
                                    "example": "2"
                                },
                                "subjectType": {
                                    "type": "string",
                                    "example": "2"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "All user"
                    },
                    "400": {
                        "description": "Unable to find. "
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/meritList/searchData": {
            "post": {
                "tags": [
                    "Merit list"
                ],
                "summary": "Token required",
                "description": "search the  Merit list  of user",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "CollegeCtrl": {
                                            "type": "string",
                                            "example": "2"
                                        },
                                        "CourseCtrl": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "PercentageCtrl": {
                                            "type": "string",
                                            "example": "22.55"
                                        },
                                        "categoryCtr": {
                                            "type": "string",
                                            "example": "General"
                                        },
                                        "subjectGroupCtrl": {
                                            "type": "array",
                                            "items": {}
                                        },
                                        "meritListNo": {
                                            "type": "string",
                                            "example": "first merit list"
                                        }
                                    }
                                },
                                "page": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "values": {
                                    "type": "string",
                                    "example": ""
                                },
                                "groupId": {
                                    "type": "array",
                                    "items": {}
                                },
                                "courseName": {
                                    "type": "string",
                                    "example": "1"
                                },
                                "collegeName": {
                                    "type": "string",
                                    "example": "2"
                                },
                                "subjectType": {
                                    "type": "string",
                                    "example": "2"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user search successfully"
                    }
                }
            }
        },
        "/api/meritList/getAllMeritListForVerificationTab": {
            "get": {
                "tags": [
                    "Merit list"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Token required",
                "description": "This route get the data for verification tab",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": true,
                        "description0": "If you dont want to search then check the Send empty value.",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get verification data"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/meritList/changeStatus": {
            "get": {
                "tags": [
                    "Merit list"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Token required",
                "description": "Change the status",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "required": true,
                        "description": "status can be NEW, VERIFY, PENDING",
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status changed successfully!!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/university/": {
            "get": {
                "tags": [
                    "University"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Token required",
                "description": "Get all universities.",
                "responses": {
                    "200": {
                        "description": "All universities."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/university/saveUniversity": {
            "post": {
                "tags": [
                    "University"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Token required",
                "description": "Save university data.",
                "parameters": [
                    {
                        "name": "universityData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "university_code_admission": {
                                    "type": "string",
                                    "example": ""
                                },
                                "university_name_admission": {
                                    "type": "string",
                                    "example": ""
                                },
                                "university_address_admission": {
                                    "type": "string",
                                    "example": ""
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Added university successfully!!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/university/updateUniversity": {
            "put": {
                "tags": [
                    "University"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Token required",
                "description": "Update university data.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "universityData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "university_code_admission": {
                                    "type": "string",
                                    "example": ""
                                },
                                "university_name_admission": {
                                    "type": "string",
                                    "example": ""
                                },
                                "university_address_admission": {
                                    "type": "string",
                                    "example": ""
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated successfully!!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/university/universityById": {
            "get": {
                "tags": [
                    "University"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Token required",
                "description": "Get single university.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "University"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/university/deleteUniversityById": {
            "delete": {
                "tags": [
                    "University"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Token required",
                "description": "Delete single university.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted Successfully!!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/university/getAllUniversityPaginationAndSearch": {
            "get": {
                "tags": [
                    "University"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Token required",
                "description": "Get the university data with pagination and search",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": true,
                        "description0": "If you dont want to search then check the Send empty value.",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "University"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/college/": {
            "get": {
                "tags": [
                    "College"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Token required",
                "description": "Get all colleges.",
                "responses": {
                    "200": {
                        "description": "All colleges."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/college/saveCollege": {
            "post": {
                "tags": [
                    "College"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Token required",
                "description": "Save college data.",
                "parameters": [
                    {
                        "name": "collegeData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "college_code_admission": {
                                    "type": "string",
                                    "example": ""
                                },
                                "college_name_admission": {
                                    "type": "string",
                                    "example": ""
                                },
                                "college_address_admission": {
                                    "type": "string",
                                    "example": ""
                                },
                                "university_code_admission": {
                                    "type": "number"
                                },
                                "college_type": {
                                    "type": "string",
                                    "example": ""
                                },
                                "city": {
                                    "type": "string",
                                    "example": ""
                                },
                                "state": {
                                    "type": "string",
                                    "example": ""
                                },
                                "collegeStatus": {
                                    "type": "string",
                                    "example": ""
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Added college successfully!!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/college/updateCollegeById": {
            "put": {
                "tags": [
                    "College"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Token required",
                "description": "Update college data.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "collegeData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "college_code_admission": {
                                    "type": "string",
                                    "example": ""
                                },
                                "college_name_admission": {
                                    "type": "string",
                                    "required": true,
                                    "example": ""
                                },
                                "college_address_admission": {
                                    "type": "string",
                                    "example": ""
                                },
                                "university_code_admission": {
                                    "type": "number",
                                    "required": true
                                },
                                "college_type": {
                                    "type": "string",
                                    "required": true,
                                    "example": ""
                                },
                                "city": {
                                    "type": "string",
                                    "required": true,
                                    "example": ""
                                },
                                "state": {
                                    "type": "string",
                                    "required": true,
                                    "example": ""
                                },
                                "collegeStatus": {
                                    "type": "string",
                                    "example": ""
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Colege updated successfully!!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/college/getCollegeById": {
            "get": {
                "tags": [
                    "College"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Token required",
                "description": "Get single college.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "College"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/college/deleteCollegeById": {
            "delete": {
                "tags": [
                    "College"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Token required",
                "description": "Delete single college.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "College deleted Successfully!!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/college/getCollegePaginationAndSearch": {
            "get": {
                "tags": [
                    "College"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Token required",
                "description": "Get college data with pagination and search",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "example": ""
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "example": ""
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": true,
                        "description0": "If you dont want to search then check the Send empty value.",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "College data."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/college/uploadCollegeLogo": {
            "post": {
                "tags": [
                    "College"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Token required",
                "description": "Get college data with pagination and search",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "example": ""
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "example": ""
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": true,
                        "description0": "If you dont want to search then check the Send empty value.",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "College data."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/faculty/": {
            "get": {
                "tags": [
                    "Faculty"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Token required",
                "description": "Get all faculties.",
                "responses": {
                    "200": {
                        "description": "All faculties."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/faculty/saveFaculty": {
            "post": {
                "tags": [
                    "Faculty"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Token required",
                "description": "Save faculty data.",
                "parameters": [
                    {
                        "name": "facultyData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "faculty_code_admission": {
                                    "type": "string",
                                    "example": ""
                                },
                                "faculty_name_admission": {
                                    "type": "string",
                                    "example": ""
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Added faculty successfully!!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/faculty/updateFacultyById": {
            "put": {
                "tags": [
                    "Faculty"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Token required",
                "description": "Update faculty data.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "facultyData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "faculty_code_admission": {
                                    "type": "string",
                                    "example": ""
                                },
                                "faculty_name_admission": {
                                    "type": "string",
                                    "example": ""
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Faculty updated successfully!!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/faculty/getFacultyById": {
            "get": {
                "tags": [
                    "Faculty"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Token required",
                "description": "Get single faculty.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Faculty"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/faculty/deleteFacultyById": {
            "delete": {
                "tags": [
                    "Faculty"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Token required",
                "description": "Delete single faculty.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Faculty deleted Successfully!!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/faculty/getFacultyWithPaginationAndSearch": {
            "get": {
                "tags": [
                    "Faculty"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Token required",
                "description": "Get faculty data with pagination and search",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "example": ""
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "example": ""
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": true,
                        "description0": "If you dont want to search then check the Send empty value.",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Faculty data."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/department/": {
            "get": {
                "tags": [
                    "Department"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Token required",
                "description": "Get all departments.",
                "responses": {
                    "200": {
                        "description": "All departments."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/department/saveDepartment": {
            "post": {
                "tags": [
                    "Department"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Token required",
                "description": "Save department data.",
                "parameters": [
                    {
                        "name": "departmentData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "department_code_admission": {
                                    "type": "string",
                                    "example": ""
                                },
                                "department_name_admission": {
                                    "type": "string",
                                    "example": ""
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Added department successfully!!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/department/updateDepartmentById": {
            "put": {
                "tags": [
                    "Department"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Token required",
                "description": "Update department data.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "departmentData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "department_code_admission": {
                                    "type": "string",
                                    "example": ""
                                },
                                "department_name_admission": {
                                    "type": "string",
                                    "example": ""
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Department updated successfully!!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/department/getDepartmentById": {
            "get": {
                "tags": [
                    "Department"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Token required",
                "description": "Get single department.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Department"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/department/deleteDepartmentById": {
            "delete": {
                "tags": [
                    "Department"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Token required",
                "description": "Delete single department.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Department deleted Successfully!!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/department/getDepartmentsPaginationAndSearch": {
            "get": {
                "tags": [
                    "Department"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Token required",
                "description": "Get departments data with pagination and search",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "example": ""
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "example": ""
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": true,
                        "description0": "If you dont want to search then check the Send empty value.",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Departments data."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/subject/": {
            "get": {
                "tags": [
                    "Subject"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Token required",
                "description": "Get all subjects.",
                "responses": {
                    "200": {
                        "description": "All subjects."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/subject/saveSubject": {
            "post": {
                "tags": [
                    "Subject"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Token required",
                "description": "Save subject data.",
                "parameters": [
                    {
                        "name": "subjectData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "subject_name_admission": {
                                    "type": "string",
                                    "example": ""
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Added subject successfully!!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/subject/updateSubjectById": {
            "put": {
                "tags": [
                    "Department"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Token required",
                "description": "Update department data.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "subjectData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "subject_name_admission": {
                                    "type": "string",
                                    "example": ""
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Subject updated successfully!!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/subject/getSubjectById": {
            "get": {
                "tags": [
                    "Subject"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Token required",
                "description": "Get single subject.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Subject"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/subject/deleteSubjectById": {
            "delete": {
                "tags": [
                    "Subject"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Token required",
                "description": "Delete single subject.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Subject deleted Successfully!!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/subject/getSubjectsWithPaginationAndSearch": {
            "get": {
                "tags": [
                    "Subject"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Token required",
                "description": "Get subjects data with pagination and search",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "example": ""
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "example": ""
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": true,
                        "description0": "If you dont want to search then check the Send empty value.",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Subjects data."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/course/": {
            "get": {
                "tags": [
                    "Course"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Token required",
                "description": "Get all courses.",
                "responses": {
                    "200": {
                        "description": "All courses."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/course/saveCourse": {
            "post": {
                "tags": [
                    "Course"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Token required",
                "description": "Save course data.",
                "parameters": [
                    {
                        "name": "courseData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "course_code_admission": {
                                    "type": "string",
                                    "example": ""
                                },
                                "course_name_admission": {
                                    "type": "string",
                                    "required": true,
                                    "example": ""
                                },
                                "course_type_admission": {
                                    "type": "string",
                                    "required": true,
                                    "example": ""
                                },
                                "degree": {
                                    "type": "string",
                                    "required": true,
                                    "example": ""
                                },
                                "subjectType": {
                                    "type": "string",
                                    "required": true,
                                    "example": ""
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Added course successfully!!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/course/updateCourseById": {
            "put": {
                "tags": [
                    "Course"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Token required",
                "description": "Update course data.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "courseData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "course_code_admission": {
                                    "type": "string",
                                    "example": ""
                                },
                                "course_name_admission": {
                                    "type": "string",
                                    "required": true,
                                    "example": ""
                                },
                                "course_type_admission": {
                                    "type": "string",
                                    "required": true,
                                    "example": ""
                                },
                                "degree": {
                                    "type": "string",
                                    "required": true,
                                    "example": ""
                                },
                                "subjectType": {
                                    "type": "string",
                                    "required": true,
                                    "example": ""
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Course updated successfully!!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/course/getCourseById": {
            "get": {
                "tags": [
                    "Course"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Token required",
                "description": "Get single course.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Course"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/course/deleteCourseById": {
            "delete": {
                "tags": [
                    "Course"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Token required",
                "description": "Delete single course.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Course deleted Successfully!!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/course/getCoursesWithPaginationAndSearch": {
            "get": {
                "tags": [
                    "Course"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Token required",
                "description": "Get courses data with pagination and search",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "example": ""
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "example": ""
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": true,
                        "description0": "If you dont want to search then check the Send empty value.",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Courses data."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/subjectGroup/": {
            "get": {
                "tags": [
                    "SubjectGroup"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Token required",
                "description": "Get all subjectGroup.",
                "responses": {
                    "200": {
                        "description": "All subjectgroups."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/subjectGroup/saveSubjectGroup": {
            "post": {
                "tags": [
                    "SubjectGroup"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Token required",
                "description": "Save subjectgroup data.",
                "parameters": [
                    {
                        "name": "subjectGroupData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "group_combination_admission": {
                                    "type": "string",
                                    "required": true,
                                    "example": ""
                                },
                                "subject_ids_admission": {
                                    "type": "array",
                                    "required": true,
                                    "items": {
                                        "type": "number"
                                    }
                                },
                                "course_id_admission": {
                                    "type": "string",
                                    "required": true,
                                    "example": ""
                                },
                                "medium": {
                                    "type": "string",
                                    "required": true,
                                    "example": ""
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Added subjectgroup successfully!!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/subjectGroup/updateSubjectGroupById": {
            "put": {
                "tags": [
                    "SubjectGroup"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Token required",
                "description": "Update subjectgroup data.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "subjectGroupData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "group_combination_admission": {
                                    "type": "string",
                                    "required": true,
                                    "example": ""
                                },
                                "subject_ids_admission": {
                                    "type": "array",
                                    "required": true,
                                    "items": {
                                        "type": "number"
                                    }
                                },
                                "course_id_admission": {
                                    "type": "string",
                                    "required": true,
                                    "example": ""
                                },
                                "medium": {
                                    "type": "string",
                                    "required": true,
                                    "example": ""
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SubjectGroup updated successfully!!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/subjectGroup/getSubjectGroupById": {
            "get": {
                "tags": [
                    "SubjectGroup"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Token required",
                "description": "Get single SubjectGroup.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SubjectGroup"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/subjectGroup/deleteSubjectGroupById": {
            "delete": {
                "tags": [
                    "SubjectGroup"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Token required",
                "description": "Delete single subjectgroup.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SubjectGroup deleted Successfully!!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/subjectGroup/getSubjectGroupsWithPaginationAndSearch": {
            "get": {
                "tags": [
                    "SubjectGroup"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Token required",
                "description": "Get subjectGroups data with pagination and search",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "example": ""
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "example": ""
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": true,
                        "description0": "If you dont want to search then check the Send empty value.",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SubjectGroups data."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/collegeCourse/": {
            "get": {
                "tags": [
                    "CollegeCourse"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Token required",
                "description": "Get all collegeCourse.",
                "responses": {
                    "200": {
                        "description": "All collegeCourse."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/collegeCourse/saveCollegeCourse": {
            "post": {
                "tags": [
                    "CollegeCourse"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Token required",
                "description": "Save collegecourse data.",
                "parameters": [
                    {
                        "name": "collegeCourseData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "college_id_admission": {
                                    "type": "number"
                                },
                                "faculty_id_admission": {
                                    "type": "number"
                                },
                                "department_id_admission": {
                                    "type": "number"
                                },
                                "course_id_admission": {
                                    "type": "number"
                                },
                                "academic_year_admission": {
                                    "type": "string"
                                },
                                "intake_admission": {
                                    "type": "number"
                                },
                                "subject_group_id_admission": {
                                    "type": "number"
                                },
                                "courseStatus":{
                                    "type":"string"
                                },
                                "admissionYear":{
                                    "type":"string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Added collegeCourse successfully!!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/collegeCourse/updateCollegeCourseById": {
            "put": {
                "tags": [
                    "CollegeCourse"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Token required",
                "description": "Update collegeCourse data.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "collegeCourseData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "college_id_admission": {
                                    "type": "number"
                                },
                                "faculty_id_admission": {
                                    "type": "number"
                                },
                                "department_id_admission": {
                                    "type": "number"
                                },
                                "course_id_admission": {
                                    "type": "number"
                                },
                                "academic_year_admission": {
                                    "type": "string"
                                },
                                "intake_admission": {
                                    "type": "number"
                                },
                                "subject_group_id_admission": {
                                    "type": "number"
                                },
                                "courseStatus":{
                                    "type":"string"
                                },
                                "admissionYear":{
                                    "type":"string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CollegeCourse updated successfully!!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/collegeCourse/getCollegeCourseById": {
            "get": {
                "tags": [
                    "CollegeCourse"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Token required",
                "description": "Get single collegeCourse.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CollegeCourse"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/collegeCourse/deleteCollegeCourseById": {
            "delete": {
                "tags": [
                    "CollegeCourse"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Token required",
                "description": "Delete single collegeCourse.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CollegeCourse deleted Successfully!!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/collegeCourse/getCollegeCoursesPaginationAndSearch": {
            "get": {
                "tags": [
                    "CollegeCourse"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "Token required",
                "description": "Get collegeCourse data with pagination and search",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "example": ""
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "example": ""
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": true,
                        "description0": "If you dont want to search then check the Send empty value.",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "string",
                            "example": "''"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CollegeCourses data."
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/collegeCourse/incrementIntakes":{
            "post":{
                "tags":[
                    "CollegeCourse"
                ],
                "summary":"Token required",
                "description":"Increment Intakes of collegeCourse.",
                "parameters":[
                    {
                        "name":"IncrementCollegeCourse",
                        "in":"body",
                        "required":true,
                        "schema":{
                            "type":"object",
                            "properties":{
                                "collegeCourseId":{
                                    "type":"number"
                                },
                                "collegeId":{
                                    "type":"number"
                                },
                                "courseId":{
                                    "type":"number"
                                },
                                "admissionYear":{
                                    "type":"number"
                                },
                                "academicYear":{
                                    "type":"string"
                                },
                                "incrementIntake":{
                                    "type":"number"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Intakes incremented successfully"
                    },
                    "204": {
                        "description": "College course not found"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/collegeCourse/decrementIntakes":{
            "post":{
                "tags":[
                    "CollegeCourse"
                ],
                "summary":"Token required",
                "description":"Decrement Intakes of collegeCourse.",
                "parameters":[
                    {
                        "name":"DecrementCollegeCourse",
                        "in":"body",
                        "required":true,
                        "schema":{
                            "type":"object",
                            "properties":{
                                "collegeCourseId":{
                                    "type":"number"
                                },
                                "collegeId":{
                                    "type":"number"
                                },
                                "courseId":{
                                    "type":"number"
                                },
                                "admissionYear":{
                                    "type":"number"
                                },
                                "academicYear":{
                                    "type":"string"
                                },
                                "decrementIntake":{
                                    "type":"number"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Intakes decremented successfully"
                    },
                    "204": {
                        "description": "College course not found"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/meritList/getMeritData": {
            "get": {
                "tags": [
                    "Merit list"
                ],
                "summary": "Token required",
                "description": "get Merit List Data",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get All Merit List Data"
                    }
                }
            }
        },
        "/api/meritList/revokeData": {
            "put": {
                "tags": [
                    "Merit list"
                ],
                "summary": "Token required",
                "description": "This route is used to change the revoke status",
                "parameters": [
                    {
                        "name": "Change Revoke Status",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "typeOfMeritList": {
                                    "type": "string"
                                },
                                "collegeId": {
                                    "type": "integer"
                                },
                                "courseId": {
                                    "type": "integer"
                                },
                                "groupId": {
                                    "type": "integer"
                                },
                                "revoke": {
                                    "type": "string",
                                    "example": ""
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data revoke Successfully"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/meritList/saveMeritListData": {
            "post": {
                "tags": [
                    "Merit list"
                ],
                "summary": "Token required",
                "description": "This route use to save the merit List in the database",
                "parameters": [
                    {
                        "name": "Save merit list",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "collegeId": {
                                    "type": "number",
                                    "example": 1
                                },
                                "courseId": {
                                    "type": "number",
                                    "example": ""
                                },
                                "CategoryName": {
                                    "type": "string",
                                    "example": "test@email.com"
                                },
                                "typeOfMeritList": {
                                    "type": "string",
                                    "example": ""
                                },
                                "currentDate": {
                                    "type": "string",
                                    "example": ""
                                },
                                "listOfMerit": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "number",
                                                "example": 2
                                            },
                                            "registrationNo": {
                                                "type": "number",
                                                "example": ""
                                            },
                                            "email": {
                                                "type": "string",
                                                "example": ""
                                            },
                                            "mobileno": {
                                                "type": "string",
                                                "example": "1234567890"
                                            },
                                            "nameAsOnMarksheet": {
                                                "type": "string",
                                                "example": ""
                                            },
                                            "admissionPercentage": {
                                                "type": "string",
                                                "example": ""
                                            }
                                        },
                                        "required": [
                                            "id",
                                            "registrationNo",
                                            "email",
                                            "mobileno",
                                            "nameAsOnMarksheet",
                                            "admissionPercentage"
                                        ]
                                    }
                                },
                                "groupId": {
                                    "type": "number",
                                    "example": ""
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Merit list save Successfully"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/meritList/uploadExcel": {
            "post": {
                "tags": [
                    "Merit list"
                ],
                "summary": "Token required",
                "description": "This route is used to Upload excels file in the backend",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "file",
                        "in": "formData",
                        "required": true,
                        "type": "file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Excels Uploaded Successfully"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/meritList/uploadPDF": {
            "post": {
                "tags": [
                    "Merit list"
                ],
                "summary": "Token required",
                "description": "This route is used to Upload PDF file in the backend",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "file",
                        "in": "formData",
                        "required": true,
                        "type": "file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Excels Uploaded Successfully"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/access/changeDegree": {
            "put": {
                "tags": [
                    "Role Base Access"
                ],
                "summary": "Token required",
                "description": "this provide the Degree type ",
                "parameters": [
                    {
                        "name": "change the Degree Type",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "number",
                                    "example": 1
                                },
                                "changeDegree": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "example": ""
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Degree Type Provide successfully"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/ticket/raiseTicket": {
            "post": {
                "tags": [
                    "Ticket"
                ],
                "summary": "Token required",
                "description": "This route is used to raise the Ticket",
                "parameters": [
                    {
                        "name": "registrationNo",
                        "type": "number"
                    },
                    {
                        "name": "email",
                        "type": "string"
                    },
                    {
                        "name": "Grievance",
                        "type": "string"
                    },
                    {
                        "name": "Category",
                        "type": "string"
                    },
                    {
                        "name": "collegeName",
                        "type": "string"
                    },
                    {
                        "name": "courseName",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {}
                }
            }
        },
        "/api/ticket/getTicket": {
            "get": {
                "tags": [
                    "Ticket"
                ],
                "summary": "Token required",
                "description": "get All tickets",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All ticket"
                    }
                }
            }
        },
        "/api/ticket/addTicketComment": {
            "post": {
                "tags": [
                    "Ticket"
                ],
                "summary": "Token required",
                "description": "This route use to add the comment on the that ticket",
                "parameters": [
                    {
                        "name": "add the ticket comment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "TicketUserId": {
                                    "type": "number"
                                },
                                "TicketId": {
                                    "type": "number"
                                },
                                "comment": {
                                    "type": "string",
                                    "example": ""
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comment added on ticket"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/ticket/getTicketComment": {
            "get": {
                "tags": [
                    "Ticket"
                ],
                "summary": "Token required",
                "description": "get the ticket comment",
                "parameters": [
                    {
                        "name": "ticketId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All  ticket comment"
                    }
                }
            }
        },
        "/api/ticket/searchTicketData": {
            "post": {
                "tags": [
                    "Ticket"
                ],
                "summary": "Token required",
                "description": "This route is used to search data in the  in Ticket database",
                "parameters": [
                    {
                        "name": "search ticket",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "values": {
                                    "type": "string"
                                },
                                "page": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user search successfully"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/ticket/deleteTicketComment": {
            "delete": {
                "tags": [
                    "Ticket"
                ],
                "summary": "Token required",
                "description": "This route is used to delete the ticket comment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "comment delete successfully"
                    }
                }
            }
        },
        "/api/access/allowColumnAccessToAdmin": {
            "post": {
                "tags": [
                    "Role Base Access"
                ],
                "summary": "Token required",
                "description": "column Access To user role wise",
                "parameters": [
                    {
                        "name": "column Access",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "number",
                                    "example": 1
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "example": "'Send email/sms'"
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "access added successfully"
                    },
                    "400": {
                        "description": "user not created "
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/access/saveCollegeAndCourse": {
            "post": {
                "tags": [
                    "Role Base Access"
                ],
                "summary": "Token required",
                "description": "college and Course Access To user role wise",
                "parameters": [
                    {
                        "name": "college and course Access",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "number",
                                    "example": 1
                                },
                                "courseData": {
                                    "type": "array",
                                    "items": {
                                        "type": "number",
                                        "example": ""
                                    }
                                },
                                "collegeId": {
                                    "type": "number",
                                    "example": 1
                                },
                                "role": {
                                    "type": "string"
                                },
                                "email": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "college and course added successfully"
                    },
                    "400": {
                        "description": "user not created "
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/access/deleteCourse": {
            "delete": {
                "tags": [
                    "Role Base Access"
                ],
                "summary": "Token required",
                "description": "this route use remove the courseId ",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "example": ""
                        }
                    },
                    {
                        "courseId": "fileName",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {}
                }
            }
        },
        "/api/userCourseDetails/filterData": {
            "get": {
                "summary": "Get filtered data from userCourseDetails and user table",
                "description": "This route is used to get filtered data from userCourseDetails and user table.",
                "tags": [
                    "User Course Details"
                ],
                "parameters": [
                    {
                        "name": "college",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "College Name"
                    },
                    {
                        "name": "course",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Course Name"
                    },
                    {
                        "name": "college application status",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "College Application Status"
                    },
                    {
                        "name": "university application status",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "University Application Status"
                    },
                    {
                        "name": "academic year",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number"
                        },
                        "description": "Academic Year"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 200,
                                    "message": "All Filtered Data Fetched Successfully",
                                    "data": []
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "example": {
                                    "status": 500,
                                    "message": "Internal Server Error",
                                    "data": null
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/activity/getYearWiseActivity": {
            "get": {
                "tags": [
                    "Activity"
                ],
                "summary": "Token required",
                "description": "get  year wise Activity  of all user",
                "parameters": [
                    {
                        "name": "year",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All users"
                    }
                }
            }
        },
        "/api/activity/searchYearWiseData": {
            "get": {
                "tags": [
                    "Activity"
                ],
                "summary": "Token required",
                "description": "search  year wise the  Activity  of user",
                "parameters": [
                    {
                        "name": "year",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    },
                    {
                        "name": "value",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All users"
                    }
                }
            }
        },
        "/api/user/getAllUsersYearWise": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Token required",
                "description": "this is get the year wise degree type of all user",
                "parameters": [
                    {
                        "name": "year",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All users"
                    }
                }
            }
        },
        "/api/meritList/getYearWiseMeritData": {
            "get": {
                "tags": [
                    "Merit list"
                ],
                "summary": "Token required",
                "description": "get year wise Merit List Data",
                "parameters": [
                    {
                        "name": "year",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get All year wise  Merit List Data"
                    }
                }
            }
        },
        "/api/meritList/getAllYearWiseMeritListVerificationTab": {
            "get": {
                "tags": [
                    "Merit list"
                ],
                "summary": "Token required",
                "description": "This api is used get All Year Wise MeritList Verification Tab",
                "parameters": [
                    {
                        "name": "year",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "example": ""
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": ""
                        },
                        "description": "Get All year wise  Merit List Data"
                    }
                ]
            }
        },
        "/api/ticket/getYearWiseTicketData": {
            "get": {
                "tags": [
                    "Ticket"
                ],
                "summary": "Token required",
                "description": "get year wise All tickets",
                "parameters": [
                    {
                        "name": "year",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "year wise All ticket"
                    }
                }
            }
        },
        "/api/documents/downloadAdmissionForm": {
            "post": {
                "tags": [
                    "Documents"
                ],
                "summary": "Token required",
                "description": "download the Application forme",
                "parameters": [
                    {
                        "name": "download the Application form",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "userId": {
                                    "id": {
                                        "type": "number",
                                        "example": 1
                                    }
                                },
                                "personalData:": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "number"
                                        },
                                        "firstName": {
                                            "type": "string"
                                        },
                                        "lastName": {
                                            "type": "string"
                                        },
                                        "nameAsOnMarksheet": {
                                            "type": "string"
                                        },
                                        "email": {
                                            "type": "string"
                                        },
                                        "mobileno": {
                                            "type": "string"
                                        },
                                        "dob": {
                                            "type": "string"
                                        },
                                        "gender": {
                                            "type": "string"
                                        },
                                        "bloodGroup": {
                                            "type": "string"
                                        },
                                        "nameAsPerAadharCard": {
                                            "type": "string"
                                        },
                                        "aadharCardno": {
                                            "type": "string"
                                        },
                                        "city": {
                                            "type": "string"
                                        },
                                        "state": {
                                            "type": "string"
                                        },
                                        "address": {
                                            "type": "string"
                                        },
                                        "religion": {
                                            "type": "string"
                                        },
                                        "minority": {
                                            "type": "string"
                                        },
                                        "pincode": {
                                            "type": "string"
                                        },
                                        "motherName": {
                                            "type": "string"
                                        },
                                        "fatherName": {
                                            "type": "string"
                                        },
                                        "parentsMobileno": {
                                            "type": "string"
                                        },
                                        "admissionType": {
                                            "type": "string"
                                        },
                                        "admissionCategory": {
                                            "type": "string"
                                        },
                                        "role": {
                                            "type": "string"
                                        },
                                        "keycloakId": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "registrationNo": {
                                            "type": "string"
                                        },
                                        "imagesName": {
                                            "type": "string"
                                        },
                                        "learningDisability": {
                                            "type": "string"
                                        },
                                        "category": {
                                            "type": "string"
                                        },
                                        "academicYear": {
                                            "type": "number"
                                        },
                                        "createdAt": {
                                            "type": "string"
                                        },
                                        "updatedAt": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "eduData": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "number"
                                        },
                                        "userId": {
                                            "type": "number"
                                        },
                                        "sscObtainedMarks": {
                                            "type": "number"
                                        },
                                        "sscOutOf": {
                                            "type": "number"
                                        },
                                        "sscPercentage": {
                                            "type": "string"
                                        },
                                        "sscGrade": {
                                            "type": "string"
                                        },
                                        "hscBoard": {
                                            "type": "string"
                                        },
                                        "hscCollegeName": {
                                            "type": "string"
                                        },
                                        "hscPassingState": {
                                            "type": "string"
                                        },
                                        "hscPassingYear": {
                                            "type": "number"
                                        },
                                        "hscPassingMonth": {
                                            "type": "string"
                                        },
                                        "hscSeatNo": {
                                            "type": "string"
                                        },
                                        "hscMarksObtained": {
                                            "type": "number"
                                        },
                                        "hscOutOf": {
                                            "type": "number"
                                        },
                                        "hscStream": {
                                            "type": "string"
                                        },
                                        "hscGrade": {
                                            "type": "string"
                                        },
                                        "hscNoOfAttempt": {
                                            "type": "number"
                                        },
                                        "hscPercentage": {
                                            "type": "string"
                                        },
                                        "achievements": {
                                            "type": "string"
                                        },
                                        "biologyPercentage": {
                                            "type": "string"
                                        },
                                        "mathPercentage": {
                                            "type": "string"
                                        },
                                        "ugCollegename": {
                                            "type": "string"
                                        },
                                        "ugCourseName": {
                                            "type": "string"
                                        },
                                        "ugPassingMonth": {
                                            "type": "string"
                                        },
                                        "ugPassingYear": {
                                            "type": "number"
                                        },
                                        "ugSeatNo": {
                                            "type": "string"
                                        },
                                        "ugNoOfAttempt": {
                                            "type": "string"
                                        },
                                        "ugEntranceMarks": {
                                            "type": "string"
                                        },
                                        "EntranceExam": {
                                            "type": "string"
                                        },
                                        "EntranceYear": {
                                            "type": "number"
                                        },
                                        "resultStatus": {
                                            "type": "string"
                                        },
                                        "ugMarksObtained": {
                                            "type": "number"
                                        },
                                        "ugOutof": {
                                            "type": "number"
                                        },
                                        "ugPercentage": {
                                            "type": "number"
                                        },
                                        "ugGrade": {
                                            "type": "number"
                                        },
                                        "ugselectChoice": {
                                            "type": "number"
                                        },
                                        "hscselectChoice": {
                                            "type": "number"
                                        },
                                        "sscselectChoice": {
                                            "type": "number"
                                        },
                                        "ugQualificationName": {
                                            "type": "number"
                                        },
                                        "admissionYear": {
                                            "type": "number"
                                        },
                                        "admissionType": {
                                            "type": "string"
                                        },
                                        "inHouse": {
                                            "type": "string"
                                        },
                                        "createdAt": {
                                            "type": "string"
                                        },
                                        "updatedAt": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "documentData": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "number",
                                                "example": 2
                                            },
                                            "documentType": {
                                                "type": "string",
                                                "example": ""
                                            },
                                            "filePath": {
                                                "type": "string",
                                                "example": ""
                                            },
                                            "extension": {
                                                "type": "string"
                                            },
                                            "fileName": {
                                                "type": "string"
                                            },
                                            "errata": {
                                                "type": "string"
                                            },
                                            "updated_step": {
                                                "type": "string"
                                            },
                                            "verify": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "id",
                                            "documentType",
                                            "filePath",
                                            "extension",
                                            "fileName"
                                        ]
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "download the Application forme successfully"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/preferences/getSubmitData": {
            "get": {
                "tags": [
                    "Preferences"
                ],
                "summary": "Token required",
                "description": "get submitted data to loack all fields after submission",
                "responses": {
                    "200": {
                        "description": "Get submitted data"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/user/savePersonalData": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Token required",
                "description": "To save students personal data from student sides",
                "parameters": [
                    {
                        "name": "Save student personal data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "personalData": {
                                    "type": "object",
                                    "properties": {
                                        "firstName": {
                                            "type": "string",
                                            "example": "Rushikesh"
                                        },
                                        "lastName": {
                                            "type": "string",
                                            "example": "Patil"
                                        },
                                        "nameAsOnMarksheet": {
                                            "type": "string",
                                            "example": "Rushikesh Patil"
                                        },
                                        "fatherName": {
                                            "type": "string",
                                            "example": "Vishnu"
                                        },
                                        "motherName": {
                                            "type": "string",
                                            "example": "Sangeeta"
                                        },
                                        "gender": {
                                            "type": "string",
                                            "enum": [
                                                "Male",
                                                "Female",
                                                "Transgender"
                                            ],
                                            "example": "Male"
                                        },
                                        "dob": {
                                            "type": "string",
                                            "example": "2023-11-30"
                                        },
                                        "bloodGroup": {
                                            "type": "string",
                                            "enum": [
                                                "A+",
                                                "O+",
                                                "B+",
                                                "AB+",
                                                "A-",
                                                "O-",
                                                "B-",
                                                "AB-"
                                            ],
                                            "example": "B+"
                                        },
                                        "learningDisability": {
                                            "type": "string",
                                            "enum": [
                                                "NOT APPLICABLE",
                                                "SPEECH AND OR HEARING IMPAIRED",
                                                "ORTHOPEDIC DISORDER",
                                                "LEARNING DISABILITY",
                                                "DYSLEXIA",
                                                "SLOW LEARNER ADHD",
                                                "AUTISM",
                                                "DYSGRAPHIA WITH ADHD",
                                                "CANCER ORTHOPAEDICALLY HANDICAP",
                                                "PHYSICALLY HANDICAPPED",
                                                "BLIND/VISUALLY IMPAIRED",
                                                "DUMB AND DEAF",
                                                "ORTHOPEDICALLY IMPAIRED",
                                                "MENTALLY CHALLENGED",
                                                "Other Disability"
                                            ],
                                            "example": "NOT APPLICABLE"
                                        },
                                        "category": {
                                            "type": "string",
                                            "enum": [
                                                "General",
                                                "OBC",
                                                "SC",
                                                "ST",
                                                "EWS",
                                                "NTA",
                                                "NTB",
                                                "NTC",
                                                "NTD",
                                                "SBC",
                                                "Others"
                                            ],
                                            "example": "NTD"
                                        },
                                        "nameAsPerAadharCard": {
                                            "type": "string",
                                            "example": "Rushikesh Patil"
                                        },
                                        "aadharCardno": {
                                            "type": "number",
                                            "example": 123654789654
                                        },
                                        "religion": {
                                            "type": "string",
                                            "enum": [
                                                "Hinduism",
                                                "Islam",
                                                "Christianity",
                                                "Sikhism",
                                                "Buddhism",
                                                "Jainism",
                                                "Zoroastrianism",
                                                "Sindhi",
                                                "Others"
                                            ],
                                            "example": "Hinduism"
                                        },
                                        "admissionCategory": {
                                            "type": "string",
                                            "enum": [
                                                "Open/General",
                                                "Reserved",
                                                "Physically Handicap",
                                                "Sindhi Linguistic Minority",
                                                "Sports (National / State Level)",
                                                "Cultural (National / State Level)",
                                                "Jammu Kashmir Migrant",
                                                "Ex-Serviceman",
                                                "Ward of Transferred Central/State Govt Employee",
                                                "Ward of Defence Personnel",
                                                "Child/Grandchild of Freedom Fighter"
                                            ],
                                            "example": "Physically Handicap"
                                        },
                                        "address": {
                                            "type": "string",
                                            "example": "Kandivali"
                                        },
                                        "city": {
                                            "type": "string",
                                            "example": "Mumbai"
                                        },
                                        "state": {
                                            "type": "string",
                                            "example": "Maharashtra"
                                        },
                                        "pincode": {
                                            "type": "string",
                                            "example": "400067"
                                        },
                                        "mobileno": {
                                            "type": "string",
                                            "example": "9785463214"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "rushi@gmail.com"
                                        },
                                        "parentsMobileno": {
                                            "type": "string",
                                            "example": "9785463214"
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Student Personal Data save successfully"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/user/getPersonalData": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Token required",
                "description": "get student personal data",
                "responses": {
                    "200": {
                        "description": "Get student personal data"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/course/getDegreeData": {
            "get": {
                "tags": [
                    "Course"
                ],
                "summary": "Token required",
                "description": "TO get degree data ",
                "responses": {
                    "200": {
                        "description": "Degree data get successfully"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/education/saveEduData": {
            "post": {
                "tags": [
                    "Educational"
                ],
                "summary": "Token required",
                "description": "To save students Educationa; data from student sides(For Under Graduation(UG) fill only ssc and hsc details and for Post Graduation(PG) fill only hsc and ug details",
                "parameters": [
                    {
                        "name": "Save student Educational data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "educationalData": {
                                    "type": "object",
                                    "properties": {
                                        "hscMarksObtained": {
                                            "type": "number"
                                        },
                                        "hscOutOf": {
                                            "type": "number"
                                        },
                                        "hscPercentage": {
                                            "type": "string"
                                        },
                                        "hscGrade": {
                                            "type": "string"
                                        },
                                        "ugCollegename": {
                                            "type": "string"
                                        },
                                        "ugCourseName": {
                                            "type": "string"
                                        },
                                        "ugPassingMonth": {
                                            "type": "string"
                                        },
                                        "ugPassingYear": {
                                            "type": "number"
                                        },
                                        "ugSeatNo": {
                                            "type": "string"
                                        },
                                        "ugNoOfAttempt": {
                                            "type": "number"
                                        },
                                        "ugEntranceMarks": {
                                            "type": "number"
                                        },
                                        "resultStatus": {
                                            "type": "string"
                                        },
                                        "ugMarksObtained": {
                                            "type": "number"
                                        },
                                        "ugOutof": {
                                            "type": "number"
                                        },
                                        "ugPercentage": {
                                            "type": "number"
                                        },
                                        "ugGrade": {
                                            "type": "string"
                                        },
                                        "hscselectChoice": {
                                            "type": "string"
                                        },
                                        "ugQualificationName": {
                                            "type": "string"
                                        },
                                        "EntranceExam": {
                                            "type": "string"
                                        },
                                        "EntranceYear": {
                                            "type": "number"
                                        },
                                        "ugselectChoice": {
                                            "type": "string"
                                        },
                                        "inHouse": {
                                            "type": "string"
                                        },
                                        "admissionYear": {
                                            "type": "number"
                                        },
                                        "sscObtainedMarks": {
                                            "type": "number"
                                        },
                                        "sscOutOf": {
                                            "type": "number"
                                        },
                                        "sscPercentage": {
                                            "type": "string"
                                        },
                                        "sscGrade": {
                                            "type": "string"
                                        },
                                        "hscCollegeName": {
                                            "type": "string"
                                        },
                                        "hscPassingState": {
                                            "type": "string"
                                        },
                                        "hscPassingYear": {
                                            "type": "number"
                                        },
                                        "hscPassingMonth": {
                                            "type": "string"
                                        },
                                        "hscSeatNo": {
                                            "type": "string"
                                        },
                                        "hscStream": {
                                            "type": "string"
                                        },
                                        "hscNoOfAttempt": {
                                            "type": "number"
                                        },
                                        "sscselectChoice": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Student Educational Data save successfully"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/education/savePrcentage": {
            "post": {
                "tags": [
                    "Educational"
                ],
                "summary": "Token required",
                "description": "To save students biology percentage and math percentage when student select course which is require biology and math percentage",
                "parameters": [
                    {
                        "name": "Save the biology and math percentage",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "mathPercentage": {
                                    "type": "number",
                                    "example": 91.00
                                },
                                "bioPercentage": {
                                    "type": "number",
                                    "example": 80.00
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comment added on ticket"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/documents/deleteDoc": {
            "delete": {
                "tags": [
                    "Documents"
                ],
                "summary": "Token required",
                "description": "To delete documents from student side",
                "parameters": [
                    {
                        "name": "docId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comment added on ticket"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/course/getDataByCourseName": {
            "get": {
                "tags": [
                    "Course"
                ],
                "summary": "Token required",
                "description": "To get course data",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get course data"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/college/getDataByCollegeName": {
            "get": {
                "tags": [
                    "College"
                ],
                "summary": "Token required",
                "description": "To get College data",
                "parameters": [
                    {
                        "name": "collegeId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get college data"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/preferences/savePreferenceData": {
            "post": {
                "tags": [
                    "Preferences"
                ],
                "summary": "Token required",
                "description": "To save preferences in preference table which is selected by students",
                "parameters": [
                    {
                        "name": "Save the preferences",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "collegeId": {
                                    "type": "array",
                                    "example": [
                                        26,
                                        59
                                    ]
                                },
                                "value": {
                                    "type": "boolean",
                                    "example": true
                                },
                                "collegeCourse": {
                                    "type": "array",
                                    "example": [
                                        "Kishinchand Chellaram College for Course M.Sc. Chemistry (In-Oranic Chemistry)",
                                        "School of Interdisciplinary Studies for Course MA in Liberal Studies"
                                    ]
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Preferences are save successfully"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/user/getStates": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Token required",
                "description": "To get State data",
                "responses": {
                    "200": {
                        "description": "Get state data"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/user/getCityState": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Token required",
                "description": "To get city and state using pinCode",
                "parameters": [
                    {
                        "name": "pincode",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "250003"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get city and state data"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/user/getStudentsPersonalData": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Token required",
                "description": "To get  Students personal data by using registration number",
                "parameters": [
                    {
                        "name": "registerationNo",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "example": 600002
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get Student Personal data"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/college/getCollegeDetails": {
            "get": {
                "tags": [
                    "College"
                ],
                "summary": "Token required",
                "description": "To get College data",
                "parameters": [
                    {
                        "name": "collegeId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "example": 2
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get college data"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/subjectGroup/getGroupDetails": {
            "get": {
                "tags": [
                    "SubjectGroup"
                ],
                "summary": "Token required",
                "description": "To get group name for courses if it availabel",
                "parameters": [
                    {
                        "name": "courseId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "example": 14
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get group name data"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/education/getEducationalData": {
            "get": {
                "tags": [
                    "Educational"
                ],
                "summary": "Token required",
                "description": "To get Student educational  data by using user Id for admin side",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "example": 65
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get Student educational data"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/documents/getDocumentsData/{userId}": {
            "get": {
                "tags": [
                    "Documents"
                ],
                "summary": "Get Documents for a admin",
                "description": "Retrieve documents for a specific user by their ID",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "type": "number",
                        "description": "User ID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File data retrieved successfully",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "integer",
                                    "example": 200
                                },
                                "message": {
                                    "type": "string",
                                    "example": "File Data Get Successfully"
                                },
                                "data": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "documentType": {
                                                "type": "string",
                                                "example": "Type"
                                            },
                                            "filePath": {
                                                "type": "string",
                                                "example": "https://example.com/documents/user123/file.pdf"
                                            },
                                            "extension": {
                                                "type": "string",
                                                "example": "pdf"
                                            },
                                            "fileName": {
                                                "type": "string",
                                                "example": "file.pdf"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Something went wrong"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/preferences/getPreferencesData": {
            "get": {
                "tags": [
                    "Preferences"
                ],
                "summary": "Token required",
                "description": "To get student selected Preferences data to show admin",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "example": ""
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get preferences successfully!!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/meritList/addAssignCollege": {
            "post": {
                "tags": [
                    "Merit list"
                ],
                "summary": "Token required",
                "description": "To save assigned college data in merit list table by admin",
                "parameters": [
                    {
                        "name": "Save student personal data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "properties": {
                                        "Name": {
                                            "type": "string",
                                            "example": "Rushikesh Patil"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "rushi@gmail.com"
                                        },
                                        "groupId": {
                                            "type": "array",
                                            "example": []
                                        },
                                        "registrationNo": {
                                            "type": "string",
                                            "example": "600002"
                                        },
                                        "collegeId": {
                                            "type": "number",
                                            "example": 2
                                        },
                                        "courseId": {
                                            "type": "number",
                                            "example": 28
                                        },
                                        "categoryName": {
                                            "type": "string",
                                            "example": "NTD"
                                        },
                                        "percentage": {
                                            "type": "string",
                                            "example": "90.00"
                                        },
                                        "mobileno": {
                                            "type": "string",
                                            "example": "9785463214"
                                        },
                                        "date": {
                                            "type": "string",
                                            "example": "2024-01-22"
                                        },
                                        "meritType": {
                                            "type": "string",
                                            "example": "MQ"
                                        }
                                    }
                                },
                                "userId": {
                                    "type": "number",
                                    "example": 65
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Added subjectgroup successfully!!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/collegeCourse/getPreferenceData": {
            "get": {
                "tags": [
                    "CollegeCourse"
                ],
                "summary": "Token required",
                "description": "To get student selected Preferences data to show admin",
                "responses": {
                    "200": {
                        "description": "get preferences successfully!!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/userCourseDetails/getCollegeReport": {
            "get": {
                "tags": [
                    "User Course Details"
                ],
                "summary": "Token required",
                "description": "To get all course status count.",
                "responses": {
                    "200": {
                        "description": "get preferences successfully!!"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/documents/uploadDocuments": {
            "post": {
                "tags": [
                    "Documents"
                ],
                "summary": "Token required",
                "description": "This route is used to Upload Errata Documents which are errata by admin",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "file",
                        "in": "formData",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "name": "degreeType",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "example": "PG"
                    },
                    {
                        "name": "userId",
                        "in": "formData",
                        "required": true,
                        "type": "number",
                        "example": 3
                    },
                    {
                        "name": "type",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "example": "Photo"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Errata Document Uploaded Successfully"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/studentfeedback/saveStudentFeedback" : {
            "post":{
                "tags":["Student Feedback"],
                "summary":"Token required",
                "description":"To save Student feedback form after submit data",
                "parameters":[
                    {
                        "name": "Save student feedback data",
                        "in": "body",
                        "required": true,
                        "schema":{
                            "type": "object",
                            "properties": {
                                "website_satisfy": {
                                    "type": "string",
                                    "example": "good"
                                },
                                "website_recommend": {
                                    "type": "string",
                                    "example": "YES"
                                },
                                "staff_satisfy": {
                                    "type": "string",
                                    "example": "good"
                                },
                                "experience_problem": {
                                    "type": "string",
                                    "example": "YES"
                                },
                                "problem": {
                                    "type": "string",
                                    "example": "It can be improve"
                                },
                                "suggestion": {
                                    "type": "string",
                                    "example": "No"
                                }

                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Student feedback save successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        },
        "/api/studentfeedback/checkEntry" :{
            "get":{
                "tags":["Student Feedback"],
                "summary":"Token required",
                "description":"To check the entry of feedback in master_admission_student_feedback table or not",
                "parameters":[
                    {
                        "name": "userId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "example": 3
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Entry checked successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Something went wrong"
                    }
                }
            }
        }
    }
}